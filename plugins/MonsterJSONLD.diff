diff --git a/plugins/PluginMonster.php b/plugins/PluginMonster.php
index c906f0a..13d701a 100755
--- a/plugins/PluginMonster.php
+++ b/plugins/PluginMonster.php
@@ -87,74 +87,155 @@ class PluginMonster extends ClassBaseServerHTMLJobSitePlugin
 
     function parseJobsListForPage($objSimpHTML)
     {
-        $ret = null;
+        $ret = array();
+        $retJSON = array();
 
+        libxml_use_internal_errors( 1 );
+        $dom  = new DOMDocument();
+        $dom->loadHTML( $objSimpHTML->root->outertext());
+        $xpath = new DOMXpath( $dom );
 
-        $nodesJobs= $objSimpHTML->find('article[class="js_result_row"]');
+        $jsonScripts = $xpath->query( '//script[@type="application/ld+json"]' );
+        if( $jsonScripts->length < 1 )
+        {
+            die( "Error: No script node found" );
+        }
+        else
+        {
+            foreach( $jsonScripts as $jsnode )
+            {
+                $json = json_decode( $jsnode->nodeValue );
+
+                foreach($json->itemListElement as $jobnode)
+                {
+                    $item = $this->getEmptyJobListingRecord();
+                    $item['job_post_url'] = $jobnode->url;
+                    $tmpURLPath = preg_replace(REXPR_MATCH_URL_DOMAIN, "", $jobnode->url);
+                    $tmpJobID = $this->getIDFromLink('/.*\/([^\/\.]*)\.?.*/', $tmpURLPath);
+
+                    if(strncasecmp($tmpURLPath, "/monster", strlen("/monster")) == 0) {
+                        $item['job_id'] = $tmpJobID;
+                        $item['job_title'] = "[UNKNOWN]";
+                    }
+                    else
+                    {
+                        $fMatchedID = preg_match('/.*?(\d+)/', $tmpJobID, $idMatches);
+                        if($fMatchedID && count($idMatches) >= 1)
+                        {
+                            $item['job_id'] = $idMatches[1];
+                            $item['job_title'] = substr($tmpURLPath, 1, strpos($tmpJobID, $item['job_id']));
+                            $item['job_title'] = \Scooper\strScrub($item['job_title'], DEFAULT_SCRUB);
+                        }
+                    }
+                    $retJSON[$item['job_id']] = $this->normalizeJobItem($item);
+                }
+            }
+        }
 
 
+
+        $nodesJobs= $objSimpHTML->find('article[class="js_result_row"]');
         foreach($nodesJobs as $node)
         {
             $item = $this->getEmptyJobListingRecord();
 
-            $subNode = $node->find("div[class='jobTitle'] h2 a");
-            if(isset($subNode) && isset($subNode[0]))
+            $featureNode = $node->find("div[class='featuredJob-label']");
+            if(isset($featureNode) && isset($featureNode[0]))
             {
-                $item['job_title'] = $subNode[0]->attr['title'];
-                $item['job_id'] = $subNode[0]->attr['data-m_impr_j_postingid'];
-                if(is_null($item['job_id']) || empty($item['job_id']))
-                    $item['job_id'] = $subNode[0]->attr['data-m_impr_j_jobid'];
-                $item['job_post_url'] = $subNode[0]->attr['href'];
+                $subNode = $node->find("h2[class='title']");
+                if(isset($subNode) && isset($subNode[0])) {
+                    $item['job_title'] = $subNode[0]->plaintext;
+                }
 
+                $subNode = $node->find("h2[class='title'] a");
+                if(isset($subNode) && isset($subNode[0])) {
+                    $item['job_post_url'] = $subNode[0]->href;
+                }
 
-                $mousedownval = html_entity_decode($subNode[0]->attr['onmousedown'], ENT_QUOTES | ENT_XML1, 'UTF-8');
+                $subNode = $node->find("div[class='standardCo']");
+                if(isset($subNode) && isset($subNode[0])) {
+                    $item['company'] = $subNode[0]->plaintext;
+                }
 
-                $parts = explode("clickJobTitleSiteCat('{", $mousedownval);
-                $vars = array();
-                if(count($parts) >= 2)
-                {
+                $subNode = $node->find("div[class='standardLoc']");
+                if(isset($subNode) && isset($subNode[0])) {
+                    $item['location'] = $subNode[0]->plaintext;
+                }
 
-                    foreach(explode(",", $parts[1]) as $v)
-                    {
-                        $keyval = explode(":", $v);
-                        if(count($keyval) >= 2)
-                        {
-                            $key = str_replace("\"", "", $keyval[0]);
-                            $val = str_replace("\"", "", $keyval[1]);
-                            $vars[$key] = $val;
+            }
+            else
+            {
+
+
+                $subNode = $node->find("div[class='jobTitle'] h2 a");
+                if(isset($subNode) && isset($subNode[0])) {
+                    $item['job_title'] = $subNode[0]->attr['title'];
+                    $item['job_id'] = $subNode[0]->attr['data-m_impr_j_postingid'];
+                    if (is_null($item['job_id']) || empty($item['job_id']))
+                        $item['job_id'] = $subNode[0]->attr['data-m_impr_j_jobid'];
+                    $item['job_post_url'] = $subNode[0]->attr['href'];
+
+
+                    $mousedownval = html_entity_decode($subNode[0]->attr['onmousedown'], ENT_QUOTES | ENT_XML1, 'UTF-8');
+
+                    $parts = explode("clickJobTitleSiteCat('{", $mousedownval);
+                    $vars = array();
+                    if (count($parts) >= 2) {
+
+                        foreach (explode(",", $parts[1]) as $v) {
+                            $keyval = explode(":", $v);
+                            if (count($keyval) >= 2) {
+                                $key = str_replace("\"", "", $keyval[0]);
+                                $val = str_replace("\"", "", $keyval[1]);
+                                $vars[$key] = $val;
+                            }
                         }
-                    }
 
-                    if(array_key_exists("eVar31", $vars) === true)
-                        $item['location'] = str_replace("_", " ", $vars['eVar31']);
+                        if (array_key_exists("eVar31", $vars) === true)
+                            $item['location'] = str_replace("_", " ", $vars['eVar31']);
 
-                    if(array_key_exists("prop24", $vars) === true)
-                    {
-                        $item['job_site_date'] = str_replace("_", "", $vars["prop24"]);
-                        $dateVal = strtotime($item['job_site_date']);
-                        if(!($dateVal === false))
-                            $item['job_site_date'] = $dateVal->format('Y-m-d');
+                        if (array_key_exists("prop24", $vars) === true) {
+                            $item['job_site_date'] = str_replace("_", "", $vars["prop24"]);
+                            $dateVal = strtotime($item['job_site_date']);
+                            if (!($dateVal === false))
+                                $item['job_site_date'] = $dateVal->format('Y-m-d');
+                        }
                     }
                 }
-            }
 
-            if($item['job_title'] == '' || $item['job_id'] == '')
-                continue;
+                if($item['job_title'] == '' || $item['job_id'] == '')
+                    continue;
 
-            $subNode = $node->find("div[class='company'] a span");
-            if(isset($subNode) && isset($subNode[0]))
-                $item['company'] = $subNode[0]->plaintext;
+                $subNode = $node->find("div[class='company'] a span");
+                if(isset($subNode) && isset($subNode[0]))
+                    $item['company'] = $subNode[0]->plaintext;
+
+                $subNode = $node->find("span[itemprop='address'] span[itemprop='addressLocality']");
+                if(isset($subNode) && isset($subNode[0]))
+                {
+                    $item['location'] = $subNode[0]->plaintext;
+                    $stateNode = $subNode[0]->nextSibling();
+                    $item['location'] = $item['location'] . ", " . $stateNode->plaintext;
+                }
 
-            $subNode = $node->find("span[itemprop='address'] span[itemprop='addressLocality']");
-            if(isset($subNode) && isset($subNode[0]))
-            {
-                $item['location'] = $subNode[0]->plaintext;
-                $stateNode = $subNode[0]->nextSibling();
-                $item['location'] = $item['location'] . ", " . $stateNode->plaintext;
             }
 
+
             $ret[] = $this->normalizeJobItem($item);
+        }
+
+        $retJobIDs = array_column($ret, 'job_id', 'job_id');
+        $retJSONKeys = array_column($retJSON, 'job_id', 'job_id');
+        $missingJobIDs = array_filter($retJSONKeys,  function($var) use($retJobIDs){
+            return !in_array($var, $retJSONKeys) ? true : false;
+            });
 
+        if(!is_null($missingJobIDs) && $missingJobIDs !== false)
+        {
+            foreach($missingJobIDs as $id)
+            {
+                $ret[] = $retJSON[$id];
+            }
         }
 
         return $ret;
